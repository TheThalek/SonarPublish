syntax = "proto3";

package sonarData;  // Optional: Replace with your desired package name

// To include new data, add it to this code and run "protoc --c_out=. sonarData.proto" 
//      from the same folder as the data.proto is in
// For python: protoc --python_out=. sonarData.proto




// Georeferenced point cloud data with rotation matrix
message Georef_NED {
    repeated float x_pointCld_body_NED = 1; // X coordinates of points, referenced wrt. body frame of robot
    repeated float y_pointCld_body_NED = 2; // Y coordinates of points
    repeated float z_pointCld_body_NED = 3; // Z coordinates of points
    repeated float rotationMatrix_NED = 4; // Rotation matrix (flattened 3x3 matrix)
}

// Georeferenced point cloud data with rotation matrix
message Georef_ECEF {
    repeated float x_pointCld_body_ECEF = 1; // X coordinates of points, referenced wrt. body frame of robot
    repeated float y_pointCld_body_ECEF = 2; // Y coordinates of points
    repeated float z_pointCld_body_ECEF = 3; // Z coordinates of points
    repeated float rotationMatrix_ECEF = 4; // Rotation matrix (flattened 3x3 matrix)
    float x_body_position_ECEF = 5; 
    float y_body_position_ECEF = 6; 
    float z_body_position_ECEF = 7; 
}


// --------------------- telemetry data ---------------------
message Telemetry{
    telemetryData_position position = 1;
    telemetryData_pose pose = 2;
    telemetryData_heading heading = 3;
    telemetryData_depth depth = 4;
    telemetryData_altitude altitude = 5;
}

message telemetryData_position {
    float latitude = 1;
    float longitude = 2;
    int32 position_timestep = 3;
}

message telemetryData_pose {
    float roll = 1;
    float pitch = 2;
    int32 pose_timestep = 3;
}

message telemetryData_heading {
    float heading = 1;
    int32 heading_timestep = 2;
}

message telemetryData_depth {
    float depth = 1;
    int32 depth_timestep = 2;
}

message telemetryData_altitude {
    float altitude = 1;
    int32 altitude_timestep = 2;
}




// --------------------- Ungeoreferenced point cloud data ---------------------
message Ungeoref{
    repeated float pointX = 1;
    repeated float pointY = 2;
    repeated int32 beamIdx = 3;
    repeated uint32 quality = 4;
    repeated float intensity = 5;
}



